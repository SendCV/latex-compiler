name: Release

on:
  workflow_call:
  push:
    branches:
      - main

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  publish_image:
    name: Publish image
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: write
      packages: write
      id-token: write
    strategy:
      matrix:
        rust_target:
          - x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Git Fetch Unshallow
        run: git fetch --prune --unshallow

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.rust_target }}

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Rust Target
        run: rustup target add ${{ matrix.rust_target }}

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.12.0

      - name: Setup Cargo Binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Setup Binaries
        run: cargo binstall -y --force cargo-zigbuild

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            pkg-config \
            libssl-dev

      - name: Build Image
        run: make build-image

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image to GitHub Container Registry
        run: make publish-image

      - name: Set Commit SHA Environment Variable
        run: |
          COMMIT_SHA="$(echo ${GITHUB_SHA:0:7})"
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: "${{ env.COMMIT_SHA }}",
              generate_release_notes: true
            });

      - name: Archive release assets
        shell: bash
        run: cp ./docker/tmp/latex-compiler ./latex-compiler-${{ matrix.rust_target }}

      - name: Attach built binaries to release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          asset_name: latex-compiler-${{ matrix.rust_target }}
          file: latex-compiler-${{ matrix.rust_target }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
